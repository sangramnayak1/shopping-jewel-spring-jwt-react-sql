---
version: "3.9"
services:
  mysql:
    image: mysql:8.0
    container_name: shopping-jewel-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: shopping_cart
      MYSQL_USER: shopuser
      MYSQL_PASSWORD: shoppass
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      #test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-prootpass"]
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
        - -uroot
        - -prootpass
      interval: 5s
      timeout: 5s
      retries: 5

  smtp:
    image: maildev/maildev
    container_name: shopping-jewel-smtp
    ports:
      - 1080:1080
      - 1025:1025
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    image: shopping-jewel-backend
    container_name: shopping-jewel-backend
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/shopping_cart?createDatabaseIfNotExist=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=shopuser
      - SPRING_DATASOURCE_PASSWORD=shoppass
      - SPRING_MAIL_HOST=smtp
      - SPRING_MAIL_PORT=1025
      - SPRING_MAIL_USERNAME=
      - SPRING_MAIL_PASSWORD=
      - OTP_EXPIRATION_MINUTES=5
    depends_on:
      mysql:
        condition: service_healthy
      smtp:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: nginx:latest
    container_name: shopping-jewel-frontend
    restart: always
    ports:
      - 3000:80
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      backend:
        condition: service_healthy
volumes:
  mysql_data: null
